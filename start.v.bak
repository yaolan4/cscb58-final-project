module control(input clk,
               input [3:0] dir_in,
               input reset_n,
               input [25:0] count,

               output load_xy,
               output clear,
               output [3:0] dir_out,
               );

    // State definitions
    localparam UPDATE_XY    = 3'b000;
    localparam SELECT_DIR   = 3'b001;
    localparam CLEAR        = 3'b010;
    localparam MOVE         = 3'b011; // Possibly unwanted
    localparam RESET        = 3'b100;

    wire rate_out;
    assign rate_out = 1'b0;
    //Need RateDivider that outputs rate_out


    always @(*)
    begin: Transition States
        case (curr_state)
            UPDATE_XY:  next_state = SELECT_DIR;
            SELECT_DIR:      
                begin
                    if (reset_n)
                        next_state = RESET;
                    else if ((| dir_in) && rate_out)
                        next_state = CLEAR;
                    else
                        next_state = UPDATE_XY;
                end
            CLEAR:      next_state = MOVE;
            MOVE:       next_state = reset_n ? RESET : UPDATE_XY;
        
            default:    next_state = RESET;
        endcase
    end

    always @(posedge clk)
    begin: states
        if(!reset_n)
            curr_state <= RESET;
        else
            curr_state <= next_state;
    end

endmodule